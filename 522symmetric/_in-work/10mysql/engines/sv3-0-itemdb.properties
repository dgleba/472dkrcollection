#
# Friendly name to refer to this node from command line
# sv3=sever3  0=master db=itemdb
engine.name=sv3-0-itemdb

# The class name for the JDBC Driver
db.driver=com.mysql.jdbc.Driver
#db.driver=oracle.jdbc.driver.OracleDriver
#db.driver=org.h2.Driver

# The JDBC URL used to connect to the database
#db.url=jdbc:mysql://localhost/corp?tinyInt1isBit=false
db.url=jdbc:mysql://192.168.88.60:13306/itemdb?tinyInt1isBit=false&useSSL=false
#db.url=jdbc:postgresql://localhost/corp?stringtype=unspecified
#db.url=jdbc:hsqldb:file:corp;shutdown=true
#db.url=jdbc:jtds:sqlserver://localhost:1433;useCursors=true;bufferMaxMemory=10240;lobBuffer=5242880
#db.url=jdbc:sqlite:corp.sqlite
#db.url=jdbc:h2:corp;AUTO_SERVER=TRUE;LOCK_TIMEOUT=60000

# The database user that SymmetricDS should use.
db.user=root

# The database password
db.password=user

# This node will contact the root node's sync.url to register itself.
# Leave blank to indicate this is the root node.
registration.url=

# Sync URL where other nodes can contact this node to push/pull data or register.
sync.url=http://localhost:31415/sync/sv3-0-itemdb

# Node group this node belongs to, which defines what it will sync with who.
# Must match the sym_node_group configuration in database.
group.id=sv3source

# External ID for this node, which is any unique identifier you want to use.
external.id=0

# How often to run purge job,
job.purge.period.time.ms=7200000


# I should add time to these settings in production...


# How to run routing (in millis), which puts changes into batches.
job.routing.period.time.ms=5000

# How often to run push (in millis), which sends changes to other nodes.
job.push.period.time.ms=10000

# How often to run pull (in millis), which receives changes from other nodes.
job.pull.period.time.ms=10000

# Automatically register new nodes when they request it.
# If this is false, accept the registration requests using "symadmin open-registration" command.
auto.registration=true

# When this node sends an initial load of data to another node, first send table create scripts.
initial.load.create.first=true

job.heartbeat.period.time.ms=18000
