version: '3.6'

services:
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk
    logging:
      driver: "json-file"
      options:
        max-size: "100k"
        max-file: "9"


  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
      - ./logstash/mysql-connector-java-8.0.15.jar:/usr/share/logstash/mysql-connector-java.jar:ro
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch
    logging:
      driver: "json-file"
      options:
        max-size: "100k"
        max-file: "9"

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch
    logging:
      driver: "json-file"
      options:
        max-size: "100k"
        max-file: "9"

  mysql:
    image: mysql:5.7
    restart: always
    ports:
      - '33061:3306'
    environment:
      - MYSQL_ROOT_PASSWORD=admin
      - MYSQL_DATABASE=example
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=admin
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - elk
    volumes:
      #- mysql_data:/var/lib/mysql
      - ./mysql-init/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD", ping", "-c 2", "localhost"]
      interval: 1m3s
      timeout: 20s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "100k"
        max-file: "9"


  adminer:
    # 10.4.1.231:6117/
    image: adminer:4.7
    restart: always
    ports:
      - 14123:8080
    networks:
      - elk
    environment:
      - ADMINER_DEFAULT_SERVER=mysql
      # - ADMINER_PLUGINS='tables-filter'

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
  mysqldata:
